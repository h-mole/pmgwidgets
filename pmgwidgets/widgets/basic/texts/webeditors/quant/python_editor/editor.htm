<!DOCTYPE html>
<html lang="zh">

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>python-editor</title>
    <link href="editor.css" type="text/css" rel="stylesheet"/>
    <script src="editor.js" type="text/javascript"></script>
    <script src="marker.js" type="text/javascript"></script>
    <script src="qwebchannel.js" type="text/javascript"></script>
    <script>
        new QWebChannel(qt.webChannelTransport,
            function (channel) {
                window.Bridge = channel.objects.Bridge;

                Bridge.signal_open_file.connect(function (file, text) {
                        load_file(file, text);
                });
                Bridge.saveSignal.connect(function () {
                    print(g_editor.getValue())
                    save_strategy(g_filename, g_editor.getValue())
                })
                Bridge.signal_request_text.connect(function () {
                    send_text('',g_editor.getValue())
                })
                Bridge.signal_save_as.connect(function(path){
                    g_filename = path;
                })
                Bridge.signal_set_autocomplete_apis.connect(
                    function(data){
                        // autocompAPIs["python"]
                        //{"python":{"keywords":{"mode":"add","content":[]}}}
                        apis = JSON.parse(data)
                        console.lo
                        for (var  langName in apis){
                            for (apiType in data[langName]){
                                console.log(data[langName][apiType]["mode"],data[langName][apiType]["content"]);
                                if (data[langName][apiType]["mode"]=="add"){
                                    autocompAPIs[langName][apiType] = Array.from(new Set(autocompAPIs[langName][apiType].concat(data[langName][apiType]["content"])));
                                }
                                else{
                                    autocompAPIs[langName][apiType] = data[langName][apiType]["content"]   
                                }
                            }
                            
                        }
                        console.log(autocompAPIs);
                    }
                )
            }
        );
        function send_text(file,text){
            Bridge.on_text_received(file,text)
        }
        function on_save(fileName,text){
            Bridge.on_save(fileName,text);
        }

        function save_strategy(file, text) {
            Bridge.callFromJs(file, text);
        }
        function print(text){
            Bridge.print_from_js(text);
        }
    </script>
    <script src="monaco-editor-0.16.2/package/min/vs/loader.js"></script>
</head>

<body>
<!--&lt;!&ndash;标签栏&ndash;&gt;-->
<!--<ul id="tabs">-->
<!--</ul>-->

<!--编辑器-->
<div id="editor">
    <script type="text/javascript">
        init_editor("editor", "# equant code editor\n\n\n#aaaaaaaaa\n\n\n#aaaaaaaa");
        // registerCompletions();
    </script>
</div>
</body>

</html>